[{"path":"https://brad-cannell.github.io/codebookr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 codebook authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://brad-cannell.github.io/codebookr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brad Cannell. Author, maintainer, copyright holder.","code":""},{"path":"https://brad-cannell.github.io/codebookr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cannell B (2022). codebookr: Create Codebooks Data Frames. https://github.com/brad-cannell/codebookr, https://brad-cannell.github.io/codebookr/.","code":"@Manual{,   title = {codebookr: Create Codebooks from Data Frames},   author = {Brad Cannell},   year = {2022},   note = {https://github.com/brad-cannell/codebookr, https://brad-cannell.github.io/codebookr/}, }"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"codebookr","dir":"","previous_headings":"","what":"Create Codebooks from Data Frames","title":"Create Codebooks from Data Frames","text":"codebookr package intended make easy users create codebooks (also called data dictionaries) directly R data frame. hood, codebookr uses flextable officer packages extensively create codebook Word document.","code":""},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Create Codebooks from Data Frames","text":"can install development version codebookr like :","code":"# install.packages(\"devtools\") devtools::install_github(\"brad-cannell/codebookr\")"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"codebookr-functions","dir":"","previous_headings":"","what":"codebookr functions","title":"Create Codebooks from Data Frames","text":"codebook: codebook() function assists creation codebook given R data frame. cb_add_col_attributes: helper function makes easier add arbitrary attributes R data frame columns (e.g., description, source, column type). attributes can later accessed codebook() function fill column attributes table column codebook.","code":""},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"example-1-the-most-basic-use-case","dir":"","previous_headings":"","what":"Example 1: The most basic use case","title":"Create Codebooks from Data Frames","text":"start demonstrating complete, bare minimum example without modification example data default values codebook() function. walking example, demonstrate several ways improve codebook document adding attributes data frame. also demonstrate effects adjusting codebook()s default values. Finally, demonstrate techniques make codebook creation process efficient couple common use cases. Let’s start loading codebookr dplyr.","code":"library(codebookr) library(dplyr, warn.conflicts = FALSE) library(haven)"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"load-data","dir":"","previous_headings":"Example 1: The most basic use case","what":"Load data","title":"Create Codebooks from Data Frames","text":"purposes making self-contained example, codebookr package comes small example data frame intended features real study data. use demonstrate use codebookr .","code":"# Load example data data(study) glimpse(study) #> Rows: 20 #> Columns: 10 #> $ id        <chr> \"1001\", \"1002\", NA, \"1004\", \"1005\", \"1006\", \"1007\", \"1008\", … #> $ address   <chr> \"101 A st.\", \"101 B st.\", \"101 C st.\", \"101 D st.\", \"101 E s… #> $ sex       <fct> Female, Female, Female, NA, Female, Male, Male, Male, Female… #> $ date      <date> 2021-10-12, 2021-09-23, 2021-10-13, 2021-10-19, NA, 2021-10… #> $ time      <time> 08:56:40, 13:26:09, 09:24:22, 08:37:26, 09:20:59, 11:14:52,… #> $ date_time <dttm> 2021-10-12 08:56:40, 2021-09-23 13:26:09, 2021-10-13 09:24:… #> $ days      <int> 3, 15, 21, 5, 8, NA, 10, 18, 10, 12, 2, 10, 12, 20, 14, 17, … #> $ height    <dbl> 81.25571, 68.15227, 58.79282, 72.81303, 69.61109, 71.05764, … #> $ likert    <int> 5, 3, 4, 4, 1, 4, 1, 3, 4, 3, 5, 4, 4, 4, 1, 2, 3, 4, 3, 1 #> $ outcome   <lgl> TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FA…"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"pass-the-data-frame-to-the-codebook-function","dir":"","previous_headings":"Example 1: The most basic use case","what":"Pass the data frame to the codebook function","title":"Create Codebooks from Data Frames","text":"first example, simply pass study data frame codebook() function without making alterations. save resulting rdocx object (described greater detail ) global environment study_codebook object.","code":"study_codebook <- codebook(study)"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"create-the-word-codebook-document","dir":"","previous_headings":"Example 1: The most basic use case","what":"Create the Word codebook document","title":"Create Codebooks from Data Frames","text":"Finally, pass study_codebook object just created print() function along path Word document want create. Alternatively, can generate rdocx file print Word document one step like . code produces following document, can click view/download Dropbox. may also download files pane .  may see example document , default codebook document includes two major sections. : metadata table. table includes metadata data frame. Currently, data frame’s name, size, number columns, number rows included metadata table. final row metadata table gives date codebook (necessarily data frame) last updated. column attributes tables. codebook include tables column attributes column data frame passed codebook() function. default, top half column attributes table includes column’s name, data type, number unique non-missing values, total number missing values. , discuss optional attributes may added table. bottom half column attributes table include basic descriptive statistics. statistics displayed depends type data column contains. discussed greater detail . value Data type just value returned passing column base R’s class() function. , discuss adding Column type attribute, allows user add additional information values column.","code":"print(study_codebook, \"basic_study_codebook.docx\") print(codebook(study), \"basic_study_codebook.docx\")"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"example-2-a-more-informative-codebook","dir":"","previous_headings":"","what":"Example 2: A more informative codebook","title":"Create Codebooks from Data Frames","text":"previous example gave us complete codebook, ’s lot room improvement. example still pretty simple, demonstrates use codebookr package make codebook labeled data frame. , begin loading example study data.","code":"# Load example data data(study) glimpse(study) #> Rows: 20 #> Columns: 10 #> $ id        <chr> \"1001\", \"1002\", NA, \"1004\", \"1005\", \"1006\", \"1007\", \"1008\", … #> $ address   <chr> \"101 A st.\", \"101 B st.\", \"101 C st.\", \"101 D st.\", \"101 E s… #> $ sex       <fct> Female, Female, Female, NA, Female, Male, Male, Male, Female… #> $ date      <date> 2021-10-12, 2021-09-23, 2021-10-13, 2021-10-19, NA, 2021-10… #> $ time      <time> 08:56:40, 13:26:09, 09:24:22, 08:37:26, 09:20:59, 11:14:52,… #> $ date_time <dttm> 2021-10-12 08:56:40, 2021-09-23 13:26:09, 2021-10-13 09:24:… #> $ days      <int> 3, 15, 21, 5, 8, NA, 10, 18, 10, 12, 2, 10, 12, 20, 14, 17, … #> $ height    <dbl> 81.25571, 68.15227, 58.79282, 72.81303, 69.61109, 71.05764, … #> $ likert    <int> 5, 3, 4, 4, 1, 4, 1, 3, 4, 3, 5, 4, 4, 4, 1, 2, 3, 4, 3, 1 #> $ outcome   <lgl> TRUE, FALSE, FALSE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE, FA…"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"column-types","dir":"","previous_headings":"Example 2: A more informative codebook","what":"Column types","title":"Create Codebooks from Data Frames","text":"Although R recognizes many different column types, study data contains, codebook() classifies columns one four types uses categories determine descriptive statistics use codebook document: Categorical many different categories, example id column study data frame. Categorical different categories, example sex column study data frame. Time, example date column study data frame. Numeric, example height column study data frame. default summary statistics returned codebook() function column types list :","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"add-column-attributes-to-the-data-frame-you-want-to-document-with-a-codebook","dir":"","previous_headings":"Example 2: A more informative codebook","what":"Add column attributes to the data frame you want to document with a codebook","title":"Create Codebooks from Data Frames","text":"Typically, though necessarily (see variables already labels?), first step creating codebook add column attributes data. cb_add_col_attributes() function convenience function allows add arbitrary attributes columns data frame. attributes can later accessed fill column attributes table codebook document. Column attributes can serve similar function variable labels SAS Stata; however, can assign many different attributes column can contain kind information want. arguments cb_add_col_attributes() : df: data frame containing column want add attribute . .x: name column want add attribute df. …: Arbitrary list attributes form attribute = \"value\". Although cb_add_col_attributes() function allow add attributes want, currently five special attributes codebook() function recognize add column attributes table codebook document. : description: Although may add text desire description attribute, intended used describe question/process generated data contained column. Many statistical software packages refer variable label. demonstrated , data imported SAS, Stata, SPSS variable labels using haven package, codebook automatically recognize . need manually create . However, may overwrite imported variable label column adding description attribute shown example . source: Although may add text desire source attribute, intended used describe data contained column originally came . example, current data frame created merging multiple data sets together, may want use source attribute identify data set originates . another example, current data frame contains longitudinal data, may want use source attribute identify wave(s) data column collected. col_type: col_type attribute intended provide additional information beyond Data type (.e., column class) values column. example, may column 0’s 1’s, numeric data type. However, may want inform data users really dummy variable 0’s 1’s represent discrete categories (Yes). Another way think Data type attribute R understands column Column type attribute humans understand column. Currently accepted values : Numeric, Categorical, Time. Perhaps even importantly, setting col_type attribute helps R determine descriptive statistics calculate bottom half column attributes table. Inside codebook() function, cb_add_summary_stats() function attempt figure whether column numeric, categorical - many categories (e.g. participant id), categorical - categories (e.g. sex), time - including dates. , matters table summary stats shown codebook document depends value cb_add_summary_stats() chooses. However, user can directly tell cb_add_summary_stats() summary stats calculate providing col_type attribute column one following values: Numeric, Categorical, Time. value_labels: Although may pass named vector desire value_labels attribute, intended inform data users correctly interpret numerically coded categorical variables. example, may column 0’s 1’s represent discrete categories (.e., “” “Yes”) instead numerical quantities. many software packages (e.g., SAS, Stata, SPSS), can layer “” “Yes” labels top 0’s 1’s improve readability analysis output. commonly referred value labels. R programming language really value labels way popular statistical software applications . R users can (typically ) coerce numerically coded categorical variables factors; however, coercing numeric vector factor adding value labels numeric vector underlying numeric values can change process creating factor. , reasons, many R programmers choose create new factor version numerically encoded variable opposed overwriting/transforming numerically encoded variable. cases, may want inform data users correctly interpret numerically coded categorical variables. Adding value labels codebook one way . Add value labels columns named vector value_labels attribute. example, value_labels = c(“” = 0, “Yes” = 1). another example, may view hypothetical value labels added likert column . demonstrated , data imported SAS, Stata, SPSS value labels using haven package, codebook automatically recognize . need manually create . However, may overwrite imported value labels column adding value_labels attribute shown example . skip_pattern: Although may add text desire skip_pattern attribute, intended used describe skip patterns data collection tools impact study participants exposed study item. example, likert question hypothetical study data asked participants enrolled study least 10 days, may want add note like “asked days < 10” skip pattern section column attributes table. Notice codebook() print message screen first time add attribute column data frame. intended help catch typos. example, add description attribute column id get following attribute(s) added variable data frame first time message. Later, add description attribute column, *** get following attribute(s) added variable data frame first time message . However, accidentally added descriptionn (typo – two n’s) attribute another column data frame get message telling added descriptionn attribute first time. codebook() allows add attribute data frame desire, can’t check make sure attributes adding “valid”. best can tell adding attribute first time, let investigate believe previously added particular attribute.","code":"study <- study %>%   cb_add_col_attributes(     id,     description = \"Participant's study identification number\",     source = \"Administrative data\",     other_attribute = \"What happens?\"   ) %>%      cb_add_col_attributes(     address,     description = \"Participant's home address\",     source = \"Administrative data\"   ) %>%    cb_add_col_attributes(     sex,     description = \"Biological sex of the participant assigned at birth\",     source = \"Sociodemographic questionnaire\"   ) %>%    cb_add_col_attributes(     date,     description = \"Participant's date of enrollment\",     source = \"Administrative data\"   ) %>%      cb_add_col_attributes(     time,     description = \"Participant's time of enrollemnt\",     source = \"Administrative data\"   ) %>%       cb_add_col_attributes(     days,     description = \"Total number of days the participant was enrolled in the study\",     source = \"Calculated variable\"   ) %>%     cb_add_col_attributes(     height,     description = \"Participant's height in inches at date of enrollment\",     source = \"Anthropometric measurements\"   ) %>%     cb_add_col_attributes(     likert,     description = \"An example Likert scale item\",     source = \"Exposure questionnaire\",     value_labels = c(       \"Very dissatisfied\" = 1,        \"Somewhat dissatisfied\" = 2,       \"Neither satisfied nor dissatisfied\" = 3,       \"Somewhat satisfied\" = 4,       \"Very satisfied\" = 5     ),     skip_pattern = \"Not asked if days < 10\"   ) %>%         cb_add_col_attributes(     outcome,     description = \"Participant experienced the outcome of interest\",     source = \"Adjudicated outcomes data\"   ) #> The following attribute(s) are being added to a variable in the data frame for the first time: description, source, other_attribute. If you believe this/these attribute(s) were previously added, then check for a typo in the attribute name. If you are adding this/these attribute(s) for the first time, you can probably safely ignore this message. #> The following attribute(s) are being added to a variable in the data frame for the first time: value_labels, skip_pattern. If you believe this/these attribute(s) were previously added, then check for a typo in the attribute name. If you are adding this/these attribute(s) for the first time, you can probably safely ignore this message."},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"create-a-word-codebook-document","dir":"","previous_headings":"Example 2: A more informative codebook","what":"Create a Word codebook document","title":"Create Codebooks from Data Frames","text":"Now ’ve added couple attributes data frame want document, pass data frame codebook() function. arguments codebook() function : df: saved file path, read memory data frame. title: optional title appear top Word codebook document. subtitle: optional subtitle appear top Word codebook document. description: optional text description dataset appear first page Word codebook document. keep_blank_attributes: default, column attributes table omit Column description, Source information, Column type, value labels, skip pattern rows column attributes table codebook document attributes haven’t set. words, won’t show blank rows attributes. Passing TRUE keep_blank_attributes argument cause opposite happen. column attributes table include Column description, Source information, Column type, value labels, skip pattern row every column data frame - even don’t attributes set. no_summary_stats: character vector column names. summary statistics added column attributes table column passed argument. can useful column contains values sensitive may used identify individual people (e.g., names, addresses, etc.) individual values column appear codebook. First, create codebook without passing values title, subtitle, description arguments. allow us easily see changes made codebook result adding attributes columns. viewing changes, add title, subtitle, description. Technically, codebook() function returns rdocx object can printed Word document. functionality comes David Gohel’s incredible officer package. final step creating Word document print . x rdocx object target path Word document want create (may may already exist). code produces following document, can click view/download Dropbox. may also download files pane .  example , title metadata table unchanged compared Example 1. However, column attributes tables now look little different. Notice column attributes tables variable now includes attributes added column attributes . Notice added other_attribute = \"happens?\" attribute id column added column attributes . attribute still attached id column, ignored codebook(). , currently five special attributes codebook() function recognize add column attributes table codebook document – description, source, col_type, value_labels, skip_pattern. Notice codebook() guessed type values contained column returned useful descriptive statistics type. case may happy guesses. weren’t? example, prefer codebook() treat likert column categorical data instead numeric data? can simply adding col_type = \"Categorical\" attribute demonstrated . code produces following document, can click view/download Dropbox. may also download files pane .  shown codebook , bottom half column attributes table now shows frequency, cumulative frequency, percentage value likert column. may also notice value_labels skip_pattern applied also displayed column attributes table.","code":"study_codebook <- codebook(df = study) print(x = study_codebook, target = \"study_codebook_1.docx\") study <- study %>%   cb_add_col_attributes(     likert,     col_type = \"Categorical\"   ) #> The following attribute(s) are being added to a variable in the data frame for the first time: col_type. If you believe this/these attribute(s) were previously added, then check for a typo in the attribute name. If you are adding this/these attribute(s) for the first time, you can probably safely ignore this message. print(x = codebook(study), target = \"study_codebook_2.docx\")"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"add-title-subtitle-and-description","dir":"","previous_headings":"Example 2: A more informative codebook","what":"Add title, subtitle, and description","title":"Create Codebooks from Data Frames","text":"previously mentioned, can optionally add custom title subtitle codebook. can also optionally add descriptive text data overall. straight forward. Just pass string text title, subtitle, /description arguments codebook() function. example , use description DETECT project example purposes . code produces following document, can click view/download Dropbox. may also download files pane .  shown codebook , codebook now contains title, subtitle, description.","code":"study_codebook <- codebook(   df = study,   title = \"My Example Study\",   subtitle = \"A Subtitle for My Example Study Codebook\",   description = \"In collaboration with Texas Adult Protective Services (APS) and one of the largest mobile healthcare providers in North Texas — MedStar Mobile Healthcare (MedStar) — our team developed and piloted an EA screening tool: Detection of Elder Abuse Through Emergency Care Technicians (DETECT). The DETECT tool was designed specifically to help medics identify potential EA among community-dwelling older adults during an emergency response. DETECT relies entirely on the medics’ systematic observations of the older adults’ physical and social environment — no direct questioning of the older adult or their caregivers is involved. The intent was to create an EA screening tool that was easy for medics to use in the field and that helped medics capture information about older adults, their environments, and their caregivers that is thought to be associated with the occurrence of EA.   We pilot tested using the DETECT screening tool with medics in the field between September 17th and October 26th, 2015. During the pilot test, MedStar’s Electronic Patient Care Reporting system (ePCR) was programmed to automatically prompt all medics to complete an EA screening using the DETECT tool while on an eligible 911 response. An eligible 911 response was defined as a call for a community-dwelling patient who was 65 years of age or older, the setting was the patient’s residence, and the patient resided in the community (e.g., private home, unlicensed adult foster homes, unlicensed board and care homes, etc.). Other types of residences (e.g., licensed skilled nursing facilities) were excluded because reports of EA in these settings are generally not investigated by APS in Texas. By definition, older adults who participated in the pilot study had to live in MedStar’s service area of an estimated (978,000 residents), which included Fort Worth, Texas, and 14 surrounding communities.\" ) print(study_codebook, \"study_codebook_3.docx\")"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"what-if-you-have-a-lot-of-variables","dir":"","previous_headings":"","what":"What if you have a lot of variables?","title":"Create Codebooks from Data Frames","text":"lot variables want set attributes , can tedious manually type cb_add_col_attributes() variables like . , demonstrate two techniques can reduce pain. Perhaps develop even better methods future. first example, demonstrate setting attribute many variables . Let’s say want set source attribute “Administrative Data” id, date, time columns. three separate calls cb_add_col_attributes() variable , becomes less tractable solution many handful columns. efficient solution, can create vector column names want add attribute set attribute value column loop. just manually type vector column names, prefer using dplyr’s select() function shown safer (e.g., throw error type variable name doesn’t exist) offers convenience allowing us use tidy-select selection features. second example, use loop actually help us write section cb_add_col_attributes() code column data set. run code chunk , print R code screen can copy paste second code chunk. cut amount typing help ensure don’t accidentally forget add attributes columns.","code":"# Load study again to remove the attributes we added above data(study) admin_vars <- study %>%    select(id, date, time) %>%    names()  for(i in admin_vars) {   attr(study[[i]], \"source\") <- \"Administrative data\" } attributes(study$id) #> $source #> [1] \"Administrative data\" attributes(study$date) #> $class #> [1] \"Date\" #>  #> $source #> [1] \"Administrative data\" attributes(study$time) #> $units #> [1] \"secs\" #>  #> $class #> [1] \"hms\"      \"difftime\" #>  #> $source #> [1] \"Administrative data\" for (i in seq_along(names(study))) {   cat(paste0('     codebook_add_col_attributes( \\n    ',       \"  \", names(study)[i], ', \\n    ',       \"  \", 'description = \"\"     ) %>%   ')) } #>  #>     codebook_add_col_attributes(  #>       id,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       address,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       sex,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       date,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       time,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       date_time,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       days,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       height,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       likert,  #>       description = \"\" #>     ) %>% #>    #>     codebook_add_col_attributes(  #>       outcome,  #>       description = \"\" #>     ) %>% #>"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"what-if-the-variables-already-have-labels","dir":"","previous_headings":"","what":"What if the variables already have labels?","title":"Create Codebooks from Data Frames","text":"’s possible ’re data already column attributes want codebook() use. example, may data frame imported binary file created statistical analysis software R. many cases, useful attributes variable labels value labels imported data. example , import study data worked . However, time importing Stata data file using read_dta() function haven package. shown , value labels, variable labels, /formats added data SAS, Stata, SPSS haven attach imported columns label, format, labels attributes respectively. Additionally, haven add haven_labelled vctrs_vctr class column value labels. Fortunately, often work SAS, Stata, SPSS data imported R using haven, codebookr built take advantage imported attributes. Specifically, codebook() function add value labels variable labels column attributes table codebook document. need pass data frame codebook() function print rdocx object . code produces following document, can click view/download Dropbox. may also download files pane .  shown codebook , Column description portion column attributes table automatically populated value column’s label attribute. Additionally, Value labels portion column attributes table automatically populated value column’s labels attribute; although, sex column labels attribute data frame.","code":"study <- read_dta(\"inst/extdata/study.dta\") attributes(study$sex) #> $label #> [1] \"Biological sex of the participant assigned at birth\" #>  #> $format.stata #> [1] \"%8.0g\" #>  #> $class #> [1] \"haven_labelled\" \"vctrs_vctr\"     \"double\"         #>  #> $labels #> Female   Male  #>      1      2 class(study$sex) #> [1] \"haven_labelled\" \"vctrs_vctr\"     \"double\" print(codebook(study), \"stata_codebook_1.docx\")"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"what-happens-if-there-is-a-label-and-a-description-attribute","dir":"","previous_headings":"What if the variables already have labels?","what":"What happens if there is a label and a description attribute?","title":"Create Codebooks from Data Frames","text":"example, id column imported label attribute. code chunk , also add description attribute. one end codebook document? code produces following document, can click view/download Dropbox. may also download files pane .  shown codebook , Column description portion column attributes table still automatically populated value column’s label attribute – except manually added description attribute. , column label description attribute, description attribute wins . idea taken time manually type description, win whatever happened label.","code":"study <- study %>%    cb_add_col_attributes(id, description = \"My new description\") #> The following attribute(s) are being added to a variable in the data frame for the first time: description. If you believe this/these attribute(s) were previously added, then check for a typo in the attribute name. If you are adding this/these attribute(s) for the first time, you can probably safely ignore this message. attributes(study$id) #> $label #> [1] \"Participant's study identification number\" #>  #> $format.stata #> [1] \"%9s\" #>  #> $description #> [1] \"My new description\" print(codebook(study), \"stata_codebook_2.docx\")"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"what-happens-if-there-is-a-labels-and-a-value_labels-attribute","dir":"","previous_headings":"What if the variables already have labels?","what":"What happens if there is a labels and a value_labels attribute?","title":"Create Codebooks from Data Frames","text":"labels value_labels attributes behave similarly label descripion attributes shown . Value labels: portion column attributes table automatically populated value column’s labels attribute – except manually add value_labels attribute. , column labels value_labels attribute, value_labels attribute wins . idea taken time manually type value_labels, win whatever happened label.","code":""},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"manually-filling-in-the-column-attributes-table","dir":"","previous_headings":"","what":"Manually filling in the column attributes table","title":"Create Codebooks from Data Frames","text":"default, codebook() drop Column description:, Source information:, Column type:, Value labels:, /Skip pattern: column attributes table values attributes don’t exist data frame. However, users requested option keep Word codebook document blank values can filled manually. believe typically bad practice change data may require create new codebook fill-Word document manually scratch . However, changing value keep_blank_attributes FALSE TRUE cause codebook() keep Column description:, Source information:, Column type:, Value labels:, Skip pattern: column attributes table even attributes don’t exist data frame. code produces following document, can click view/download Dropbox. may also download files pane .  shown screenshot , rows column attributes table now exist codebook document column data frame. However, values blank relevant attributes set.","code":"# Refresh data data(study) study_codebook <- codebook(study, keep_blank_attributes = TRUE) print(study_codebook, \"study_codebook_4.docx\")"},{"path":"https://brad-cannell.github.io/codebookr/index.html","id":"preventing-summary-statistics-from-appearing-in-the-column-attributes-table","dir":"","previous_headings":"","what":"Preventing summary statistics from appearing in the column attributes table","title":"Create Codebooks from Data Frames","text":"may times column contains values sensitive may used identify individual people (e.g., names, addresses, etc.) individual values column appear codebook. example, study data includes address column. wanted make codebook study data available public, data , may want individual addresses show summary statistics portion column attributes table default.  course, just drop address column data frame entirely, ’s better codebook acknowledge columns exist data frame. cases like , can pass character vector column names no_summary_stats argument codebook() function. prevent summary statistics added column attributes table column passed argument.  shown screenshot , column attributes table address column longer shows idividual addresses.","code":"study_codebook <- codebook(study, no_summary_stats = \"address\") print(study_codebook, \"study_codebook_5.docx\")"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_col_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Attributes to Columns — cb_add_col_attributes","title":"Add Attributes to Columns — cb_add_col_attributes","text":"Add arbitrary attributes columns (e.g., description, source, column type). attributes can later accessed fill column attributes table. Note: Column type type say : categorical numeric, Data type computer says .","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_col_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Attributes to Columns — cb_add_col_attributes","text":"","code":"cb_add_col_attributes(df, .x, ...)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_col_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Attributes to Columns — cb_add_col_attributes","text":"df Data frame interest .x Column interest df ... Arbitrary list attributes (.e., attribute = \"value\")","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_col_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Attributes to Columns — cb_add_col_attributes","text":"Data frame","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Description Text to Codebook — cb_add_description","title":"Add Description Text to Codebook — cb_add_description","text":"Basically, just checks number paragraphs description runs cb_add_text one.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Description Text to Codebook — cb_add_description","text":"","code":"cb_add_description(rdocx, description)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Description Text to Codebook — cb_add_description","text":"rdocx rdocx rdocx object created officer::read_docx() description Text description dataset","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_description.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Description Text to Codebook — cb_add_description","text":"rdocx object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_section_header.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Formatted Section Header — cb_add_section_header","title":"Create Formatted Section Header — cb_add_section_header","text":"Create Formatted Section Header","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_section_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Formatted Section Header — cb_add_section_header","text":"","code":"cb_add_section_header(rdocx, text = NA)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_section_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Formatted Section Header — cb_add_section_header","text":"rdocx rdocx object created officer::read_docx() text Text section header","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_section_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Formatted Section Header — cb_add_section_header","text":"rdocx object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_summary_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Appropriate Statistics for Variable Type — cb_add_summary_stats","title":"Calculate Appropriate Statistics for Variable Type — cb_add_summary_stats","text":"input cb_add_summary_stats data frame column data frame format cb_add_summary_stats(study, \"id\"). column name character string passed loop codebook function. purpose cb_add_summary_stats attempt figure whether column : Numeric (e.g., height) Categorical - many categories (e.g. participant id) Categorical - categories (e.g. gender) Time - including dates matters table summary stats shown codebook document depends value cb_add_summary_stats chooses.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_summary_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Appropriate Statistics for Variable Type — cb_add_summary_stats","text":"","code":"cb_add_summary_stats(   df,   .x,   many_cats = 10,   num_to_cat = 4,   digits = 2,   n_extreme_cats = 5 )"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_summary_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Appropriate Statistics for Variable Type — cb_add_summary_stats","text":"df Data frame interest .x Column interest many_cats many_cats argument sets cutoff value partially (.e., along col_type attribute) determines whether cb_add_summary_stats categorize variable categorical categories categorical many categories. number categories constitutes \"many\" defined value passed many_cats argument. default 10. num_to_cat num_to_cat argument sets cutoff value partially (.e., along col_type attribute) determines whether cb_add_summary_stats categorize numeric categorical. col_type attribute set column number unique non-missing values <= num_to_cat, cb_add_summary_stats guess variable categorical. default value num_to_cat 4. digits Number digits decimal display n_extreme_cats Number extreme values display column classified many_cats. default, 5 least frequently occurring values 5 frequently occurring values displayed.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_summary_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Appropriate Statistics for Variable Type — cb_add_summary_stats","text":"tibble results","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_summary_stats.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Appropriate Statistics for Variable Type — cb_add_summary_stats","text":"user can tell cb_add_summary_stats function choose explicitly giving column col_type attribute set one following values: Numeric. example, height /weight. study <- cb_add_col_attributes(study, height, col_type = \"numeric\") Categorical. describe many categories vs categories determined . study <- cb_add_col_attributes(study, id, col_type = \"categorical\") Time. Dates, times, datetimes. cb_add_col_attributes(study, date, col_type = \"time\") user explicitly set col_type attribute one values, cb_add_summary_stats guess col_type attribute assign column based column's class number unique non-missing values . However, number unique non-missing values used absolute way (e.g., 10 unique values ALWAYS many_cats). Instead, number unique non-missing values used relative values passed many_cats parameter /num_to_cat parameter -- depending class column.","code":""},{"path":[]},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Formatted Text — cb_add_text","title":"Create Formatted Text — cb_add_text","text":"Create Formatted Text","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Formatted Text — cb_add_text","text":"","code":"cb_add_text(rdocx, text = NA)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Formatted Text — cb_add_text","text":"rdocx rdocx rdocx object created officer::read_docx() text Arbitrary text","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Formatted Text — cb_add_text","text":"rdocx object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_title.html","id":null,"dir":"Reference","previous_headings":"","what":"Optionally Add Title and Subtitle to Codebook — cb_add_title","title":"Optionally Add Title and Subtitle to Codebook — cb_add_title","text":"function intended stand-alone function. indented used codebook function.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_title.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optionally Add Title and Subtitle to Codebook — cb_add_title","text":"","code":"cb_add_title(rdocx, title = NA, subtitle = NA)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_title.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optionally Add Title and Subtitle to Codebook — cb_add_title","text":"rdocx rdocx object created officer::read_docx() title Optional title subtitle Optional subtitle","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_add_title.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optionally Add Title and Subtitle to Codebook — cb_add_title","text":"rdocx object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_get_col_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Column Attributes — cb_get_col_attributes","title":"Get Column Attributes — cb_get_col_attributes","text":"Used codebook() create top half column attributes table.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_get_col_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Column Attributes — cb_get_col_attributes","text":"","code":"cb_get_col_attributes(df, .x, keep_blank_attributes = keep_blank_attributes)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_get_col_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Column Attributes — cb_get_col_attributes","text":"df Data frame interest .x Column interest df keep_blank_attributes default, column attributes table omit Column description, Source information, Column type, value labels rows column attributes table codebook document attributes set. words, show blank rows attributes. Passing TRUE keep_blank_attributes argument cause opposite happen. column attributes table include Column description, Source information, Column type, value labels row every column data frame - even value.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_get_col_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Column Attributes — cb_get_col_attributes","text":"tibble column attributes","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_get_col_attributes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Column Attributes — cb_get_col_attributes","text":"Typically, though necessarily, first step creating codebook add column attributes data. cb_add_col_attributes() function convenience function allows add arbitrary attributes columns (e.g., description, source, column type). attributes can later accessed fill column attributes table codebook document. Column attributes can serve similar function variable labels SAS Stata; however, can assign many different attributes column can contain kind information want. Although cb_add_col_attributes() function allow add attributes want, currently four special attributes codebook() function (via cb_get_col_attributes()) recognize add column attributes table codebook document. : description: Although may add text desire description attribute, intended used describe question/process generated data contained column. Many statistical software packages refer variable label. source: Although may add text desire source attribute, intended used describe data contained column originally came . example, current data frame created merging multiple data sets together, may want use source attribute identify data set originates . another example, current data frame contains longitudinal data, may want use source attribute identify wave(s) data column collected. col_type: col_type attribute intended provide additional information beyond Data type (.e., column class) values column. example, may column 0's 1's, numeric data type. However, may want inform data users really dummy variable 0's 1's represent discrete categories (Yes). Another way think Data type attribute R understands column Column type attribute humans understand column. Currently accepted values : Numeric, Categorical, Time. Perhaps even importantly, setting col_type attribute helps R determine descriptive statistics calculate bottom half column attributes table. Inside codebook() function, cb_add_summary_stats() function attempt figure whether column numeric, categorical - many categories (e.g. participant id), categorical - categories (e.g. sex), time - including dates. , matters table summary stats shown codebook document depends value cb_add_summary_stats() chooses. However, user can directly tell cb_add_summary_stats() summary stats calculate providing adding col_type attribute column one following values: Numeric, Categorical, Time. value_labels: Although may pass named vector desire value_labels attribute, intended inform data users correctly interpret numerically coded categorical variables. example, may column 0's 1's represent discrete categories (.e., \"\" \"Yes\") instead numerical quantities. many software packages (e.g., SAS, Stata, SPSS), can layer \"\" \"Yes\" labels top 0's 1's improve readability analysis output. commonly referred value labels. R programming language really value labels way popular statistical software applications . R users can (typically ) coerce numerically coded categorical variables factors; however, coercing numeric vector factor adding value labels numeric vector underlying numeric values can change process creating factor. , reasons, many R programmers choose create new factor version numerically encoded variable opposed overwriting/transforming numerically encoded variable. cases, may want inform data users correctly interpret numerically coded categorical variables. Adding value labels codebook one way .","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_few_cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Summary Statistics for Categorical Variables with Few Categories — cb_summary_stats_few_cats","title":"Compute Summary Statistics for Categorical Variables with Few Categories — cb_summary_stats_few_cats","text":"Compute Summary Statistics Categorical Variables Categories","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_few_cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Summary Statistics for Categorical Variables with Few Categories — cb_summary_stats_few_cats","text":"","code":"cb_summary_stats_few_cats(df, .x, digits = 2)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_few_cats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Summary Statistics for Categorical Variables with Few Categories — cb_summary_stats_few_cats","text":"df Data frame interest .x Column interest digits Number digits decimal display","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_few_cats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Summary Statistics for Categorical Variables with Few Categories — cb_summary_stats_few_cats","text":"tibble","code":""},{"path":[]},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_many_cats.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Summary Statistics for Categorical Variables with Many Categories — cb_summary_stats_many_cats","title":"Compute Summary Statistics for Categorical Variables with Many Categories — cb_summary_stats_many_cats","text":"Compute Summary Statistics Categorical Variables Many Categories","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_many_cats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Summary Statistics for Categorical Variables with Many Categories — cb_summary_stats_many_cats","text":"","code":"cb_summary_stats_many_cats(df, .x, n_extreme_cats = 5)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_many_cats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Summary Statistics for Categorical Variables with Many Categories — cb_summary_stats_many_cats","text":"df Data frame interest .x Column interest n_extreme_cats Number extreme values display","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_many_cats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Summary Statistics for Categorical Variables with Many Categories — cb_summary_stats_many_cats","text":"tibble","code":""},{"path":[]},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Summary Statistics for Numeric Variables — cb_summary_stats_numeric","title":"Compute Summary Statistics for Numeric Variables — cb_summary_stats_numeric","text":"Compute Summary Statistics Numeric Variables","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Summary Statistics for Numeric Variables — cb_summary_stats_numeric","text":"","code":"cb_summary_stats_numeric(df, .x, digits = 2)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Summary Statistics for Numeric Variables — cb_summary_stats_numeric","text":"df Data frame interest .x Column interest digits Number digits decimal display","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Summary Statistics for Numeric Variables — cb_summary_stats_numeric","text":"tibble","code":""},{"path":[]},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Summary Statistics for Date or Time Variables — cb_summary_stats_time","title":"Compute Summary Statistics for Date or Time Variables — cb_summary_stats_time","text":"Compute Summary Statistics Date Time Variables","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Summary Statistics for Date or Time Variables — cb_summary_stats_time","text":"","code":"cb_summary_stats_time(df, .x, digits = 2)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Summary Statistics for Date or Time Variables — cb_summary_stats_time","text":"df Data frame interest .x Column interest digits Number digits decimal display","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Summary Statistics for Date or Time Variables — cb_summary_stats_time","text":"tibble","code":""},{"path":[]},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_to_ft.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Formatted Flextable From Summary Statistics — cb_summary_stats_to_ft","title":"Create Formatted Flextable From Summary Statistics — cb_summary_stats_to_ft","text":"Create Formatted Flextable Summary Statistics","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_to_ft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Formatted Flextable From Summary Statistics — cb_summary_stats_to_ft","text":"","code":"cb_summary_stats_to_ft(df, ...)  # S3 method for summary_numeric cb_summary_stats_to_ft(df, col_width = 1.3)  # S3 method for summary_many_cats cb_summary_stats_to_ft(df, col_width = 1.62)  # S3 method for summary_few_cats cb_summary_stats_to_ft(df, col_width = 1.62)  # S3 method for summary_time cb_summary_stats_to_ft(df, col_width = 1.62)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_to_ft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Formatted Flextable From Summary Statistics — cb_summary_stats_to_ft","text":"df Data frame summary statistics ... stuff col_width Set width column appear Word table","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_summary_stats_to_ft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Formatted Flextable From Summary Statistics — cb_summary_stats_to_ft","text":"Flextable object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_theme_col_attr.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Column Attributes Flextable — cb_theme_col_attr","title":"Format Column Attributes Flextable — cb_theme_col_attr","text":"Format Column Attributes Flextable","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_theme_col_attr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Column Attributes Flextable — cb_theme_col_attr","text":"","code":"cb_theme_col_attr(ft)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_theme_col_attr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Column Attributes Flextable — cb_theme_col_attr","text":"ft flextable object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_theme_col_attr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Column Attributes Flextable — cb_theme_col_attr","text":"flextable object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_theme_df_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Format Data Frame Attributes Flextable — cb_theme_df_attributes","title":"Format Data Frame Attributes Flextable — cb_theme_df_attributes","text":"Format Data Frame Attributes Flextable","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_theme_df_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format Data Frame Attributes Flextable — cb_theme_df_attributes","text":"","code":"cb_theme_df_attributes(ft)"},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_theme_df_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format Data Frame Attributes Flextable — cb_theme_df_attributes","text":"ft flextable object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/cb_theme_df_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format Data Frame Attributes Flextable — cb_theme_df_attributes","text":"flextable object","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/codebook.html","id":null,"dir":"Reference","previous_headings":"","what":"Automate creation of a data codebook — codebook","title":"Automate creation of a data codebook — codebook","text":"codebook function assists creation codebook given data frame.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/codebook.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Automate creation of a data codebook — codebook","text":"","code":"codebook(   df,   title = NA,   subtitle = NA,   description = NA,   keep_blank_attributes = FALSE,   no_summary_stats = NULL )"},{"path":"https://brad-cannell.github.io/codebookr/reference/codebook.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Automate creation of a data codebook — codebook","text":"df data frame codebook describe title optional title appear top Word codebook document subtitle optional subtitle appear top Word codebook document description optional text description dataset appear first page Word codebook document keep_blank_attributes TRUE FALSE. default, column attributes table omit Column description, Source information, Column type, value labels, skip pattern rows column attributes table codebook document attributes set. words, show blank rows attributes. Passing TRUE keep_blank_attributes argument cause opposite happen. column attributes table include Column description, Source information, Column type, value labels row every column data frame - even attributes set. no_summary_stats character vector column names. summary statistics added column attributes table column passed argument. can useful column contains values sensitive may used identify individual people (e.g., names, addresses, etc.) individual values column appear codebook.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/codebook.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Automate creation of a data codebook — codebook","text":"rdocx object can printed Word document","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/codebook.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Automate creation of a data codebook — codebook","text":"Codebook expects df  data frame read memory saved data file. Please provide path saved data file. function gets selected attributes file saved path stores attributes data frame, later turned flextable added codebook document.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/codebook.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Automate creation of a data codebook — codebook","text":"","code":"study_codebook <- codebook(   df = study,   title = \"My Example Study\",   subtitle = \"A Subtitle for My Example Study Codebook\",   description = \"Brief (or long) description of the data.\" )  # Create the Word codebook document print(study_codebook, path = \"example_codebook.docx\") #> rdocx document with 22 element(s) #>  #> * styles: #>                 Normal              heading 1              heading 2  #>            \"paragraph\"            \"paragraph\"            \"paragraph\"  #>              heading 3 Default Paragraph Font           Normal Table  #>            \"paragraph\"            \"character\"                \"table\"  #>                No List                 strong               centered  #>            \"numbering\"            \"character\"            \"paragraph\"  #>         table_template    Light List Accent 2            Titre 1 Car  #>                \"table\"                \"table\"            \"character\"  #>            Titre 2 Car            Titre 3 Car          Image Caption  #>            \"character\"            \"character\"            \"paragraph\"  #>          Table Caption     Table Professional                  toc 1  #>            \"paragraph\"                \"table\"            \"paragraph\"  #>                  toc 2           Balloon Text    Texte de bulles Car  #>            \"paragraph\"            \"paragraph\"            \"character\"  #>           reference_id          graphic title            table title  #>            \"character\"            \"paragraph\"            \"paragraph\"  #>  #> * Content at cursor location: #> NULL"},{"path":"https://brad-cannell.github.io/codebookr/reference/study.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulated study data. — study","title":"Simulated study data. — study","text":"code create study data - simulated dataset can used demonstrate use codebook package.","code":""},{"path":"https://brad-cannell.github.io/codebookr/reference/study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulated study data. — study","text":"","code":"study"},{"path":"https://brad-cannell.github.io/codebookr/reference/study.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Simulated study data. — study","text":"data frame 20 rows 10 variables: id Participant's study identification number address Participant's home address sex Biological sex participant assigned birth, female/male date Participant's date enrollment time Participant's time enrollment date_time Participant's date time enrollment days Total number days participant enrolled study height Participant's height inches date enrollment likert example Likert scale item, 1-5 outcome Participant experienced outcome interest, TRUE FALSE","code":""},{"path":"https://brad-cannell.github.io/codebookr/news/index.html","id":"codebookr-development-version","dir":"Changelog","previous_headings":"","what":"codebookr (development version)","title":"codebookr (development version)","text":"Make column number column wider #10. column number won’t wrap new line 1,000 columns data frame. Fix (!mode_char) error #15","code":""},{"path":"https://brad-cannell.github.io/codebookr/news/index.html","id":"codebookr-014","dir":"Changelog","previous_headings":"","what":"codebookr 0.1.4","title":"codebookr 0.1.4","text":"Add option prevent summary stats table selected columns. no_summary_stats argument codebook() function prevent summary statistics added column attributes table column passed argument. Update cb_summary_stats_time(). Previously, mode value date/time column NA, Value summary stats table looked blank. Now, mode non-missing values returned instead. Additionally, values NA, summary stats table says explicitly.","code":""},{"path":"https://brad-cannell.github.io/codebookr/news/index.html","id":"codebookr-013","dir":"Changelog","previous_headings":"","what":"codebookr 0.1.3","title":"codebookr 0.1.3","text":"Add column numbers column attributes tables. See: https://github.com/brad-cannell/codebookr/issues/10 Make time (.e., class = hms) columns display human readable format opposed underlying numeric value. Add support ‘pkgdown’ site.","code":""},{"path":"https://brad-cannell.github.io/codebookr/news/index.html","id":"codebookr-012","dir":"Changelog","previous_headings":"","what":"codebookr 0.1.2","title":"codebookr 0.1.2","text":"Speed codebook() function many columns. See: https://github.com/brad-cannell/codebookr/issues/17","code":""},{"path":"https://brad-cannell.github.io/codebookr/news/index.html","id":"codebookr-011","dir":"Changelog","previous_headings":"","what":"codebookr 0.1.1","title":"codebookr 0.1.1","text":"Add haven (>= 2.5.0) DESCRIPTION Imports. prevent errors related https://github.com/tidyverse/haven/issues/520","code":""},{"path":"https://brad-cannell.github.io/codebookr/news/index.html","id":"codebookr-010","dir":"Changelog","previous_headings":"","what":"codebookr 0.1.0","title":"codebookr 0.1.0","text":"First CRAN submission","code":""}]
